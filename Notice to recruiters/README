**ОповещенияДляРекрутеров.epf**
This is an external processing for the 1C database: Salary and personnel management. 
An exchange with E-Staff (Complex solution in the field of personnel selection. 
Software for personnel departments of 
companies and recruiting agencies) is implemented here. 
Seven days after the employee is hired, the recruiter receives an email 
notification that a work meeting needs to be held.

_**Code example (runs from object module):**_

Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.БезопасныйРежим = Ложь; 
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	
	//представление команды в пользовательском режиме
	НоваяКоманда.Представление = "Рассылка";
	НоваяКоманда.Идентификатор = НоваяКоманда.Представление;
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыКоманды) Экспорт 
	
	УчетнаяЗапись = УправлениеЭлектроннойПочтой.ПолучитьУчетнуюЗаписьДляОтправкиПоУмолчанию();
	
	ДатаНачало = НачалоДня(ТекущаяДата() - 60 * 60 * 24 * 7);
	ДатаКонец  = КонецДня(ТекущаяДата() - 60 * 60 * 24 * 7);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СостоянияСотрудников.Сотрудник.ФизическоеЛицо КАК СотрудникФизическоеЛицо
	                      |ИЗ
	                      |	РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудников
	                      |ГДЕ
	                      |	СостоянияСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	                      |	И СостоянияСотрудников.ДокументОснование ССЫЛКА Документ.ПриемНаРаботу
	                      |	И СостоянияСотрудников.ДокументОснование.Дата МЕЖДУ &ДатаНачало И &ДатаКонец");
	Запрос.УстановитьПараметр("ДатаНачало", ДатаНачало);
	Запрос.УстановитьПараметр("ДатаКонец",  ДатаКонец);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	РекрутерСотрудник = Новый Соответствие; 
		
	Для Каждого СтрВыгрузка Из Выгрузка Цикл 
		
		КонтИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрВыгрузка.СотрудникФизическоеЛицо, "", ТекущаяДата(), Ложь); 
		Для Каждого Стр Из КонтИнформация Цикл
			Если Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда 
				
				УдаляемыеСимволы = СтрСоединить(СтрРазделить(Стр.Представление, "0123456789", Ложь));
				ТелефонФизЛица   = "+" + СтрСоединить(СтрРазделить(Стр.Представление, УдаляемыеСимволы, Ложь));
				Рекрутер         = ПолучитьРекрутера(ТелефонФизЛица); 
				
			    Если ЗначениеЗаполнено(Рекрутер) Или Рекрутер <> "" Тогда	
					СсылкаРекрутер = Справочники.ФизическиеЛица.НайтиПоНаименованию(Рекрутер);
					РекрутерСотрудник.Вставить(СсылкаРекрутер, СтрВыгрузка.СотрудникФизическоеЛицо); 	
				КонецЕсли;
				
			КонецЕсли;	
		КонецЦикла;
		
	КонецЦикла;	
	
	Для Каждого СтрСоотв Из РекрутерСотрудник Цикл 
		
		ЭлектроннаяПочтаРекрутера = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрСоотв.Ключ, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, ТекущаяДата(), Истина);
		
		КонтИнформацияСотрудника = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрСоотв.Значение, "", ТекущаяДата(), Ложь);
		
		НомераТелефоновСотрудника = "";
		
		Для Каждого Стр Из КонтИнформацияСотрудника Цикл
			Если Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
				Если СтрНайти(НомераТелефоновСотрудника, Стр.Представление) = 0 Тогда 
					НомераТелефоновСотрудника = НомераТелефоновСотрудника + Стр.Представление + "; ";
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
				
		ТелоПисьма = "Сотруднику - " + СтрСоотв.Значение + " - необходимо провести онбординг." + Символы.ПС  + Символы.ПС + "Контакты сотрудника: " + Лев(НомераТелефоновСотрудника, СтрДлина(НомераТелефоновСотрудника) - 2);
		
		ПараметрыПисьма = Новый Структура;
		ПараметрыПисьма.Вставить("Кому",          ЭлектроннаяПочтаРекрутера); 
		ПараметрыПисьма.Вставить("УчетнаяЗапись", УчетнаяЗапись);
		ПараметрыПисьма.Вставить("Тема",          "Необходимо провести онбординг");
		ПараметрыПисьма.Вставить("Тело",          ТелоПисьма); 
		ПараметрыПисьма.Вставить("ТипТекста",     "ПростойТекст");
		
		РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(УчетнаяЗапись, ПараметрыПисьма);	
		
	КонецЦикла;	
	
КонецФункции

Функция ПолучитьРекрутера(МобильныйТелефонКандидата)
	
	Заголовок = Новый Соответствие();
	Заголовок.Вставить("Content-Type", 	"application/json");
	Заголовок.Вставить("Authorization", "Bearer [my token]");
	
	HTTPСоединение = Новый HTTPСоединение("estaff.[serverName]:9000"); 
	HTTPЗапрос     = Новый HTTPЗапрос("/api/candidate/find", Заголовок); 
	СтрокаJSON     = "{" + """" + "filter" + """" + ": {" + """" + "mobile_phone" + """" + ": " + """" + МобильныйТелефонКандидата + """" + "},"  + """" + "field_names"  + """" + 
					    ": ["  + """" + "user" + """" + "]}";
	HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);
	
	Ответ = HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос);
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СтрокаОтвет = Ответ.ПолучитьТелоКакСтроку();
		
		ПодстрокаФигурнаяСкобкаПраво = "}";
		СтрокаБезФигурнойСкобкиПраво = СтрЗаменить(СтрокаОтвет, ПодстрокаФигурнаяСкобкаПраво, "");
		ПодстрокаФигурнаяСкобкаЛево  = "{";  
		СтрокаБезФигурнойСкобкиЛево  = СтрЗаменить(СтрокаБезФигурнойСкобкиПраво, ПодстрокаФигурнаяСкобкаЛево, "");
		ПодстрокаСкобкаПраво         = "]";
		СтрокаБезСкобки              = СтрЗаменить(СтрокаБезФигурнойСкобкиЛево, ПодстрокаСкобкаПраво, ""); 
		ПодстрокаСкобкаЛево          = "[";
		СтрокаБезСкобки              = СтрЗаменить(СтрокаБезФигурнойСкобкиЛево, ПодстрокаСкобкаЛево, "");
		ПодстрокаКавычки             = """";
		ИсходнаяСтрока               = СтрЗаменить(СтрокаБезСкобки, ПодстрокаКавычки, "");
		
		мПодстроки = СтрРазделить(ИсходнаяСтрока, ",");
		
		мПодстроки = Новый Массив; 
		
		позРазделителя = Найти(ИсходнаяСтрока, ",");
		Пока позРазделителя > 0 Цикл
			мПодстроки.Добавить(Лев(ИсходнаяСтрока, позРазделителя - 1));
			ИсходнаяСтрока = Сред(ИсходнаяСтрока, позРазделителя + 1);
			позРазделителя = Найти(ИсходнаяСтрока, ",");
		КонецЦикла;
		мПодстроки.Добавить(ИсходнаяСтрока); 
		
		ВыходнаяСтруктура = Новый Структура;
		Для каждого Подстрока Из мПодстроки Цикл
			мКлючИЗначение = СтрРазделить(Подстрока, ":");
			ВыходнаяСтруктура.Вставить(мКлючИЗначение[0], мКлючИЗначение[1]);
		КонецЦикла;
		
		Если ВыходнаяСтруктура.Свойство("lastname") Тогда 
			Рекрутер = ВыходнаяСтруктура.lastname + " " + ВыходнаяСтруктура.firstname + " " + ВыходнаяСтруктура.middlename; 	
		    Возврат Рекрутер;  
		КонецЕсли;	

	КонецЕсли;
	
	Возврат "";
	
КонецФункции
